FROM centos:7
MAINTAINER Max Linke <max.linke@biophys.mpg.de>

RUN curl -sLO https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
RUN rpm -ivh epel-release-latest-7.noarch.rpm
RUN rm epel-release-latest-7.noarch.rpm
RUN yum install centos-release-scl -y

RUN yum install -y cmake3 bzip2 devtoolset-4-gcc devtoolset-4-gcc-c++ git make m4 which valgrind unzip
# Possibly add "yum -y install clang" for the clang builder
RUN yum clean all -y
# make cmake3 the default cmake version
RUN ln -s /usr/bin/cmake3 /usr/bin/cmake
RUN ln -s /usr/bin/ctest3 /usr/bin/ctest
RUN scl enable devtoolset-4 bash
RUN ln -s /opt/rh/devtoolset-4/root/usr/bin/gcc /usr/bin/gcc
RUN ln -s /opt/rh/devtoolset-4/root/usr/bin/g++ /usr/bin/g++

# install python dependencies
RUN curl -sLO https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
RUN chmod +x Miniconda2-latest-Linux-x86_64.sh
RUN ./Miniconda2-latest-Linux-x86_64.sh -b -f
RUN /root/miniconda2/bin/conda upgrade -y --all
RUN /root/miniconda2/bin/conda install -y -c conda-forge notebook pandas pyyaml numpy scipy pytest h5py mdanalysis
# enable conda software packages
ENV PATH /root/miniconda2/bin:$PATH
RUN rm Miniconda2-latest-Linux-x86_64.sh
RUN conda clean --all --yes

# build deps for complexes++
COPY build_deps.sh .
COPY deps.md5 .
COPY build.cfg .
RUN /bin/bash -c "bash build_deps.sh"
RUN rm /tmp/root/complexes-pp -rf
RUN rm build_deps.sh
RUN rm deps.md5
RUN rm build.cfg
